По сути здесь есть два больших шага: это Webpack и Git
Webpack - это сборщик проекта, где по сути мы указываем входную точку для приложения, 
в нашем случае это будет всего лишь одна входная точка - один файл, который будет подтягивать другие
модули, которые мы будем описывать и вэбпак будет их собирать в один js файл, при этом он будет обрабатывать
различные форматы, то есть например, мы будем писать на последнем синтаксисе JS, то есть использовать
его самые современные фишки и для того, чтобы они поддерживались более старыми браузерами, нам необходимо
пропускать js через babel это транспайлер js кода, который приводит его из новых версий в определенные ранние

модули в вэбпаке идут по умолчанию (imports/exports)
babel
scss - препроцессор, так как писать на чистом css не очень удобно, поэтому мы хотим чтобы данный вэбпак поддерживал
какой либо препроцессор
Eslint - чтобы в процессе написания js кода мы следили за его чистотой

Вэбпак должен поддерживать два режима сборки проекта:
2 Modes:
    - Dev; - Dev mode будет поддерживать такие вещи как:
        - Dev Server - это такой инструмент, который позволяет нам перезагружать автоматически окно 
        браузера, если произошли какие-то изменения в коде, то есть мы нажимаем Ctrl S, пересобирается
        весь код - обновляется страница в браузере и мы сразу же видим изменения, в том числе он будет 
        поддерживать Hot Reload для стилей, которые мы будем писать и т.д. В продакшен режиме подобный режим
        нам не нужен будет. 
        - SourceMaps - это исходные карты, вообще браузер поддерживает только JS и только CSS
        и исходные карты будут добавляться только для SCSS файлов, чтобы понимать где мы вообще 
        находимся и какие стили мы написали
        - Eslint - это инструмент, который служит для поддержки чистоты кода и для содержания кода в едином 
        стиле и он нужен только при разработке, в Продакшне он нам не нужен.
        - Not Minified JS & CSS - во время разработки нам необходимо понимать, как наш код выглядит
        и что конкретно в нем происходит, то есть мы его не минифицируем.
    - Prod;
        - Minified Code - в Продакшне необходимо, чтобы весь код был максимально сжатым, чтобы он занимал
        меньше пространства, и чтобы наше приложение быстрее грузилось

Git - система контроля версий Гит. Она позволяет следить за версионностью вашего приложения и чем сложнее
ваш код и чем больше в нем взаимодействий, тем важнее данная система. Эта система нужна для того, чтобы вернуть
все на место, если случилась ошибка в разработке
